#version 460 core
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

uniform int gridRes;
uniform float binSize;

layout(std140, binding = 0) buffer Positions {
    vec3 positions[];
};

layout(std140, binding = 1) buffer Buckets {
    int buckets[];
};

layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

int getBucketID(vec3 coord) {
    return int(floor(coord.x * pow(gridRes, 2) + coord.y * gridRes + coord.z));
}

void main() {
    const uint particleID = gl_GlobalInvocationID.x;	// The .y and .z are both 1 in this case.
    vec3 p = positions[particleID];

    vec3 bucketCoord = vec3(floor(p.x / binSize), floor(p.y / binSize), floor(p.z / binSize));
    buckets[particleID] = getBucketID(bucketCoord);
}
