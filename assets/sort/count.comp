#version 460 core
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

layout(location = 0, r32ui) uniform restrict uimage3D countGrid;
uniform int gridRes;
uniform float binSize;
uniform int numItems;

struct Particle {
    vec3 position;
    vec3 velocity;
    float density;
    float pressure;
};

layout(std430, binding = 0) restrict readonly buffer Particles {
    Particle particles[];
};

// Increment the particle's corresponding bin by 1
void main() {
    const uint particleID = gl_GlobalInvocationID.x;
    if (particleID >= numItems) {
        return;
    }

    const vec3 p = particles[particleID].position;
    const ivec3 binCoord = ivec3(p / binSize);

    imageAtomicAdd(countGrid, binCoord, 1);
}
