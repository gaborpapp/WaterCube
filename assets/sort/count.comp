#version 460 core

layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

struct Particle {
    vec3 position;
    float density;
    vec3 velocity;
    float pressure;
};

layout(std430, binding = 0) restrict readonly buffer Particles {
    Particle particles[];
};

layout(std430, binding = 1) buffer Counts {
    uint counts[];
};

uniform float binSize;
uniform int numItems;
uniform int gridRes;

// Increment the particle's corresponding bin by 1
void main() {
    const uint particleID = gl_GlobalInvocationID.x;
    if (particleID >= numItems) {
        return;
    }

    const vec3 p = particles[particleID].position;
    const ivec3 c = clamp(ivec3(p / binSize), ivec3(0), ivec3(gridRes - 1));
    const uint index = c.z * gridRes * gridRes + c.y * gridRes + c.x; 

    atomicAdd(counts[index], 1);
}
