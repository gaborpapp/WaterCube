#version 460 core

layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

layout(binding = 0) restrict buffer Count {
    uint globalCount;
};

layout(std430, binding = 1) restrict readonly buffer Counts {
    uint counts[];
};

layout(std430, binding = 2) restrict writeonly buffer Offsets {
    uint offsets[];
};


uniform int gridRes;

shared uint localCount;
shared uint globalBaseOffset;

// Compute the prefix sum for each bin
void main() {
    const ivec3 c = ivec3(gl_GlobalInvocationID);
    if (any(greaterThanEqual(c, ivec3(gridRes)))) {
        return;
    }

    // Step 1: step local count to 0 for each work group
    if (gl_LocalInvocationIndex == 0) {
        localCount = 0;
    }

    barrier();

    // Step 2: add bin count to local prerfix sum
    const uint index = c.z * gridRes * gridRes + c.y * gridRes + c.x;
    const uint binCount = counts[index];
    const uint localOffset = atomicAdd(localCount, binCount);

    barrier();

    // Step 3: set the bin offset for the work group based on the global and local count
    if (gl_LocalInvocationIndex == 0) {
        globalBaseOffset = atomicAdd(globalCount, localCount);
    }

    barrier();

    // Step 4: 
    const uint globalOffset = globalBaseOffset + localOffset;
    offsets[index] = globalOffset;
}
