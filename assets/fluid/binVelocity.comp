#version 460 core
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout(std140, binding = 19) buffer Velocities {
    vec3 velocities[];
};

layout(std140, binding = 33) buffer Offsets {
    int offsets[];
};

layout(std140, binding = 34) buffer Counts {
    int counts[];
};

layout(std140, binding = 35) buffer Sorted {
    int sorted[];
};

layout(std140, binding = 20) buffer BinVelocities {
    vec3 binVelocities[];
};

layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

void main() {
    const uint bucketID = gl_GlobalInvocationID.x; // The .y and .z are both 1 in this case.
    const int offset = offsets[bucketID];
    const int count = counts[bucketID];
    vec3 velocity = vec3(0);

    for (int i = 0; i < count; i++) {
        velocity += velocities[sorted[offset + i]];
    }

    if (count > 0) {
        velocity /= count;
    }

    binVelocities[bucketID] = velocity;
}
