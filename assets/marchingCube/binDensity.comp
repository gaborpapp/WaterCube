#version 460 core
#extension GL_ARB_compute_shader : enable

layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

struct Particle {
    vec3 position;
    float density;
    vec3 velocity;
    float pressure;
};

layout(std430, binding = 0) restrict readonly buffer Particles {
    Particle particles[];
};

layout(binding = 1, r32ui) uniform restrict uimage3D densityField;
uniform float size;
uniform int numItems;
uniform int res;

ivec3 pointToBinCoord(vec3 p) {
    return ivec3((p / size) * ivec3(res));
}

void main() {
    const uint particleID = gl_GlobalInvocationID.x;
    if (particleID >= numItems) {
        return;
    }

    const Particle p = particles[particleID];
    const ivec3 binCoord = pointToBinCoord(p.position);

    imageAtomicAdd(densityField, binCoord, floatBitsToUint(p.density));
}
