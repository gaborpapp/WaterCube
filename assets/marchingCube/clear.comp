#version 460 core

#define THREAD 1024

layout(local_size_x = THREAD, local_size_y = 1, local_size_z = 1) in;

struct Grid {
	vec3 position;
	vec3 normal;
};

layout(std430, binding = 0) buffer grids {
	Grid grid[];
};

uniform int count;

void main() {
	uint idx = gl_GlobalInvocationID.x;
	if (idx >= count) return;

	// init
	grid[idx].position = vec3(0, 0, 0);
	grid[idx].normal = vec3(0, 0, 0);
}
